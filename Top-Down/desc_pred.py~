from gramatica import m
import sys
import lex.lex as lex

#entrada = [('tipo', 'int'), ('identificador', 'x'), ('identificador', 'x'), ('logico', '='), ('int', '3'), ('identificador', 'x'), ('logico', '='), ('int', '3'), ('aritmetico', '+'), ('int', '4'),("$","$")]

entrada = ""
arquivo = open(sys.argv[1], "r")
entrada = lex.lex(arquivo)
entrada.append(('$', '$'))

for i in range(0,len(entrada)):
	if entrada[i][0] in ["aritmetico", "logico"]:
		entrada[i] = entrada[i][1],entrada[i][0]
proximo = entrada.pop(0)
pilha = ["P"]
terminais = ["+=","-=","*=","/=","%=","**=","=", "tipo", "identificador", "<",">","<=",">=","!=","==","*", "//", "/", "+", "-", "&&", "||", "!", "int", "e"]
nao_terminais = [x for x in m]
x = pilha[-1]
while x != "$":
	if x in terminais:
		if x == "e":
			pilha.pop(-1)
			x = pilha[-1]
		elif x == proximo[0]:
			pilha.pop(-1)
			x = pilha[-1]
			proximo = entrada.pop(0)
		else:
			print "Erro de Sintaxe"
	elif x in nao_terminais:
		if pilha[-1] != "P":
			pilha.pop(-1)
		aux = m[x][proximo[0]].split(" ")
		aux.reverse()
		for i in aux:
			pilha.append(i)
		x = pilha[-1]
	else:
		print "Erro de Sintaxe"
if proximo[0] != "$":
	print "Erro de Sintaxe"
print "Programa sem erros"


